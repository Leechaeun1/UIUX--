.grid-container {
  /* display: grid; -> 요소를 grid container로 설정 */
  display: grid;
  /* grid-template-columns -> 열 지정 */
  /* grid layout은 열 우선이므로 열 방향으로 
  먼저 배치하고 남은 요소를 다음 행에 배치 */
  /* grid-template-columns: 100px 100px 100px; -> 3열 */
  /* grid-template-columns: repeat(반복하고 싶은 횟수, 크기); */
  grid-template-columns: repeat(3, 100px);
  /* column-gap: 1rem; -> 열과 열 사이 띄워줌 */
  column-gap: 1rem;
  /* row-gap: 1rem; -> 행과 행 사이 띄워줌 */
  row-gap: 1rem;
  /* align-items: start,end,center; 
  -> grid cell을 중심으로 각각 시작,끝,중간 지점에 정렬 
  flex-start,end,center와 헷갈리지 말기 ! */
  /* align-items: start; */
  /* justify-items: stretch; -> 요소 내 배치, stretch가 디폴트 */
  /* justify-items: start; */

  /* grid-template-rows -> 행 지정 */
  /* grid-template-rows: 100px 100px; */
  /* grid-template-rows: minmax(100px, auto); 
  -> 최소 100px의 높이 지정, 만약 벗어나면 
  자동으로 늘리도록 함 */
  /* repeat & minmax 조합도 가능 */
  grid-template-rows: repeat(2, minmax(100px, auto));
  /* grid-auto-rows: 100px; 
  -> grid-template에 지정하지 않은 아이템 유동적으로 지정 */
  grid-auto-rows: 100px;
}

.grid-item {
  color: white;
  background-color: #ff5252;
}
.grid-item:nth-child(2n) {
  background-color: #bf5e5e;
}
.grid-item:nth-child(3n) {
  background-color: green;
}
.grid-item:nth-child(4n) {
  background-color: orange;
}
.item2 {
  /* 두개의 열 + 두개의 행 차지 */
  /* grid-column-start/end: 시작라인넘버/끝라인넘버; */
  /* grid-column-start: 2;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 3; */

  /* 위의 네 줄을 간단히 쓸 수 있다 */
  /* grid-column: 2/4;
  grid-row: 1/3; */

  /* 2번 라인부터 두 칸 쓰겠다 */
  grid-column: 2 / span2;
  grid-row: 1 / span2;
}
